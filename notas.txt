a
b
c
d
e
f
g
h
i
j
k
l
m
n
o
p
q
r
s
t
u
v
w
x
y
z

Expresiones regulares
{1,1}que solamente aparezca 1 vez 
[^  ] eso es para negación

grep //funciona con REgEx
	-i 	//ignora capitales 
	-H 	//imprime el nombre del archivo
	-n 	//imprime el numero de linea
	-v 	//invertir los resultados

fgrep //funciona con patrones, uno o varios
	-f //se selecciona un file con todos los patrones a buscar

egrep //grep + fgrep

sort
	-d //diccionario
	-n //numerico
	-r //descendente
	-t //delimitador
	-k //ordenar a partir del campo ejemplo sort-t ":" -k 3 archivo
	-u //uniq
	-f //no considera su valor ASCII

tr cadena1 cadena 2 //sustituir caracteres pero 1 a 1 de las cadenas
	-d  //borrar caracteres
	-s  //borrar repetidos del caracter

uniq //busca unicos
	-c //hace un conteo

cut -fn,m  //corta por filas
	-d"delimitador" //delimitador
	-cn,m  //corta por columnas

head -n

tail -f
	-n

Shell

shift //hace un corrimiento a la derecha de argumentos y si se le asigna un número hace ese número de corrimientos a la derecha

if[condición]; then
	//comandos
fi

if[condición]; then
	//comandos
else
	//comandos
fi

for i in `ls` //ejecución
do
	//comandos
done

while[ condicion]; do
	//comandos
done

break //rompe iteración

continue //continua con la siguiente iteración

read //Lee datos de la entrada estandar

//operadores

eq // == numeros
ne // != numeros
gt // >
ge // >=
lt // <
le // <=

test
	-f //verifica si el archivo existe y es una archivo ordinario
	-e //verifica si existe el archivo
	-d //verifica si existe el archivo y es un directorio

find //buscar
	-perm 7777	//permisos
	-mtime 1 	//modificado en las últimas 24 hrs
	-ctime 1 	//creado en las ultimas 24 hrs
	-exec		//ejecutar un comando extra

ejemplos:
find / -exec egrep -Hin "patron" {} \;
find | grep filename

ps -fea //muestra os procesos desde el primero implementado

uname -a //muestra los datos del systema

/////////////////////////////////////clase extra
interested
ISO 2701
CSIRT manual enisa
NIST



cifrado César // si es de más o menos de 3 es cifrado por sustitución

cifrado:
C(xi)=(Pi+3)mod26

descifrado:
Pi=(Xi-3)mod 26

Ejemplo: descrifrar el siguiente texto mediante análisis de frecuencias

corrimiento en 6

ZNK KGXRE HOXJ MKZY ZNK CUXS

THE EARLY BIRD GETS THE WORM

E= 13%
T = 9%
A & O = 8%
I & S = 7%
H & R = 6%

vigénere
C(Xi) = (Pi + K) mod L
D(Pi) = (Xi + K) mod L

polialfabetico

P   O   L   I   T   E   C   N   I   C   O
15  14  11  8   19  4   2   13  8   2   14
I   P   N   I   P   N   I   P   N   I   P
8   15  13  8   15  13  8   15  13  8   15
------------------------------------------
23  3   24  16  8   17  10  2   21  10  3
X   D   Y   Q   I   R   K   C   V   K   D


///////////
Cifrado por bloques
1. clave r = {1,2,3...}
2. Dividido el texto claro en bloques de m tamaño.
3. Cifrar los bloques

Ejemplo: usar la clave {1,2,3,4} r(1) =3
								 r(2) =1
								 r(3) =4
								 r(4) =2

Para cifrar el texto:
PIRATE ATTACK
|--||--||--| //dividir el texto en bloques de 4


1   2   3   4
P   I   R   A
I   A   P   R

1   2   3   4
T   E   A   T
E   T   T   A   

1   2   3   4
T   A   C   K
A   K   T   C

palabra cifrada IAPRETTAAKTC

Ejercicio descrifrar el tecto SWUETRAEOEHS

SWUE
USEW

TRAE
ATER

OEHS
HOSE


////////////
railfence

k=3 instituto politecnico nacional

i  t  u  p  i  c  c  a  o  l
 n  i  t  o  t  n  o  c  n  
  s  t  o  l  e  i  n  i  a

texto cifrado
itupiccnitotnostolein

vg.reyesmacedo@gmail.com

Criptografía

Moderna

Simetrica	Asimetrica
DES 		RSA
 triple-DES
AES


/////////////////
Protocolo de intercambio de llaves

Diffu-Hellman

Alice y Bob

Alice:



Pasos:
	1.-Se establece un primo p y m generador g pertenece Zp (Información Pública)
	2.-Alice escoge a perteece Zp-1, al azar.
	Calcula A=g^amodP y envia A a Bob.
	3.-Bob escoge b pertenece Zp-1 al azar, calcula: B=g^bmodp y envía B a Alice

Ejemplo:

1.- Alice y Bob acuerdan P=23 y g=5.
2.- Alice escoge a=6 y calcula: g^amodP = 5^6mod23=8, envía a Bob
3.- Bob elige un número b = 15 g^bmodP=5^15mod23=19
4.- Alice calcula k=B^amodP
				  k=19^6mod23
				  k=2
5.- Bob calcula k=A^bmodP
				k=8^15mod23
				k=2



/////////////
Rivest Shamir Adleman

RSA

emisor -> mensaje -> receptor
Pbk						Pbk
Pvk						Pvk
			C(Pbk)		D(Pvk)

emisor <- mensaje <- receptor
D(Pvk)		C(Pbk)

1.- Escoger dos números
primos p, q
	p=11, q=23
2.- Calcular=p*q
	n=11(23)=253
3.- Calcular el valor t = (p-1)*(q-1)
					  t = 10(22)=220
4.- Buscar el número "e" tal que e sea impar y coprimo con t.
	1<e<t, MCD(t,e)=1
	en este caso, e=3 MCD(220,3)=1

%.- se generar claves;
	5. Se calcula el exponente privado de RSA
		d=inv(e,t)
		e*d=1modt
		d=((y*t)+1)/e para y=1,2,3... hasta que d sea un valor natural
		d=147
		Así, la clave pública (e,n) = (3,253)
		        clave privada (e,n) = (147,253)

Cifrado:
C=M^e mod n
Descifrado:
M = C^d mod n

Ejercicio:
Cifrar la palabra:
SEGURIDAD

M = 18,4,6,20,17,8,3,0,3
C = 13,64,216,157,106,6,27,0,27 //ver sra.py


//////////////////////
Funciones Hash
(Funciones picadillo/Resúmen)
Función: Regla de correspondencia que asigna elementos de un conjunto A con elementos de un conjunto B

Unidireccionales
-> Fáciles de calcular de izquierda a derecha

Biyección
Suprayectivas e Inyectivas

Inyectivas (1 a 1)

Supreayectivas (relación entre 2 grupos sin ser 1 a 1)


/////////////////////
DSA = RSA + Funciones hash
Firma digital


Documento -> f(h) -> cifrar Pvk -> :D -> descifrar Pbk -> hash
Documento -> :D -> f(h) -> hash

/////////////////////

BlockChain

eso está intenso

//////////////////////

cifrado el gamal

1.- se escogen un número primo P.
2.- Se escogen dos numeros aleatorios g pertenece a Zp y a pertenece a (P-1)
3.- Se calcula el valor de k = g^a mod P
4.- la clave pública es: (g1p1k)
    la clave privda : (a)

Cifrado
Y_1=g^b mod P
Y_2=k^b m mod P
Mensaje: C_b (m_1 b) =(Y_1 Y_2)

Logaritmo discreto:
log_g K(mod P) = a

Descifrado:
m=Y_1^(-a) Y_2 mod P
m=Y_1^(P-1-a) Y_2 mod P

Ejercicio Alice escoge los valores:
p=17 p-1=16 g=3 a=6
Calcula el valor de k=g^a mod p = 3^6 mod 17 =15


Entonces:
clave pública (g,p,h) = (3,17,15)
clave privada (a) = 6.congratulate

Bob tiene el texto claro m=9, entonces escoge al azar b=5, donde b pertenece a (p-1)
y_1 = g^b mod p = 3^5 mod 17 = 5
y_2 = k^b m mod p = 15^5 (9) mod 17 = 1

Texto cifrado:
C_5(9,5) = (5,1)

Descifrado:
m= y_1^(p-1-a) y_2 mod p
m = 5^ (17-1-6) (1) mod 17
m = 5^10 mod 17
m = 9

///////////////////
openssl crear un texto cifrado

openssl genrsa -out miclaveprivada.pem -des 1024

openssl rsa -in miclaveprivada.pem -pubout -out miclavepublica.pemwriting RSA key

openssl rsautl -encrypt -pubin -inkey miclavepublica.pem -in archivo2.txt  -out cifrado2.bin

openssl rsautl -decrypt -inkey miclaveprivada.pem -in cifrado2.bin -out salida.txt

openssl rsautl -sign -inkey miclaveprivada.pem -in texto3.txt -out firma.bin

openssl rsautl -verify -pubin -inkey miclavepublica.pem -in firma.bin -out original.txt


////////////////////
Agenda

Habilidaddes y funciones de un administrador de sistema
bash, utilerías
Programación shell
secuencia booting
Usuarios
Kernel y Dispositivos  //monolitico o modular
Software
Red
Respaldos
Procesos
Seguridad

////////////////////
Habilidades

Comandos básicos unix
Editor Vi
conocimiento de la estructura de directorios
Secuencia de booteo
Comunicación con usuarios
Organización
Documentación

///////////////
Funciones

Automatización de tareas
Monitoreo del sistema
Usuarios
Hardware
FS
Instalación de software
Configuración Red
Respaldos
Procesos
Seguridad

//////////////////

Estructura /etc/passwd

Nombre de la cuenta (politicas)
Password Codificado
UID
GID
Información del usuario
Directorio home
Shell

///////////////////
Estructura /etc/group

Nombre grupo
Password
GID
Usuarios adicionales al grupo

///////////////////
Estructura /etc/shadow

Nombre
Password Cifrado
Ultimo cambio (numero de dias desde enero 1 de 1970)
Numero de dias que deben transcurrir para el proximo cambio de password
Numero de dias maximo de validez de la cuenta
Dias de aviso antes de caducar el password
Dias despues de que un password caduque para deshabilitar la cuenta
Fecha de expiración del password (1 Enero 1970)

////////////////////
Usuarios

Asignar un username, ID, y un grupo primario
Asignar la entrada a /etc/passwd y /etc/group (vipw)
Asignar un password (password)
Opcional (limites de espacio y procesamiento, características de passwords)
Crear el directorio home (chown, chgrp)
Personalizar scripts de inicio (.ashrc,.bash_profile)
Probar la cuenta
useradd -c "comentario" -d /home/cuenta -m /home/cuenta -g GID -u UID -s /bin/bash cuenta.
groupadd -g <GID> <name>

//usuarios mayores a 1000 son los normales

////////////////////
Manejo de kernel

major number //
minor number //

Monolitico
Modulos
	lsmod 	//ver todos los modulos del kernel
	rmmod	//borrar un modulo del kernel
	Insmod	//insertar modulo
/dev/proc

/etc/modprobe.d/blacklist 	//lista negra de modulos a no cargar
/modules	//lugar donde se cargan modulos extras al kernel

/lib/modules/<VK>/kernel/drivers/char/lp.ko 	//modulo lp <VK> es version del kernel consegida con uname -a

apt-get intall git fakeroot build-essential ncurses-dev xz-utils libssl-dev bc

cd /usr/src/linux-headers<VK>/
make menuconfig 	//contruir modulos para cargar kernel
make -j 4
make modules_install
make install -j 4
update-initramfs -c -k version_kernel	//mini kernel anterior al kernel
update-grub		//para tener distintos kernels en el boot

sysctl	//modificar banderas de los modulos del kernel

/proc 				//carpeta a cambiarnos

cat modules 		//modulos ejecutandose y su lugar en memoria
cat meminfo 		//donde se guarda el estado de la memoria
cat filesystems 	//sistemas de archivo que soporta este kernel

top //lee dinamicamente meminfo

ls -l /dev/sda 		//para ver en qué sd se está corriendo mi sistema y su major y minor number

ls -l /dev/sda* 		//para todos los sd's sistema y su major y minor number

ls -l /proc/sys 		//donde se guardan todos los archivos a modificar a tiempo real

ls -l /proc/sys/net/ipv4 	//para ver las configuraciones de red ipv4

sysctl net.ipv4.ip_forward=1 //setea valor en 1 en /proc/sys/net/ipv4/ip_forward

/////////////////////////////
Dispositivos

Dispositivos Carácter
Dispositivos Bloque
mknod nombre tipo MN mn
fdisk /dev/sdb
mkfs -t ext3 /dev/sdb1
mount -t ext3 /dev/sdb1 /mount/disk2
umount

dd if=/dev/zero of=archivo b=1024 count = 100000 	//hacer un sistema de archivos de 98 MBllamado archivo
/etc/fstab 										 	//archivo donde vienen los discos a montar


//////////////////////////////
Software

Automatizada
	Precompilados
	No se controla
	apt-cache search nombre_software
	apt-get install nombre_software
Manual
	Control
	Compiladores especificos de la arquitectura
	Shc
	Httpd
		Readme
		Install
		./configura
			--help
			..prefic=/ruta
		make install
			distclean clean

/etc/apt/sourcelist //es donde se encuentran los repositorios a agregar

dpkg -i nombre_paquete //intalar un paquete a la antigua

////////////////////////////////
Procesos

Background
Foreground
jobs		//procesos detenidos
ps -fea 	//ver todos los procesos desde el init
top 		//monitor en consola
Pstree		//
Ctrl + z 	//pausar un proceso
bg 			//mandar un proceso pausado a background
fg 			//mandar un proceso pausado a foreground
uptime 		//
kil 		//matar un proceso
	-15 	//matar un proceso una vez que se cierren los archivos correctamente
	-9 		//matar el proceso sin importar nada

//////////////////////////////////
Redes

ifconfig
	ifconfig eth0 netmask x.x.x.x broadcast x.x.x.x ip
	ifconfig <interfaz de red> ip //para cambiar ip
route
	route add default gw x.x.x.x
netstat 		//todas las conexiones abiertas
netstat -tulpn 	//puertos abiertos esté sirve para cerrar puertos
	-a todas las conexiones
hostname
/etc/hosts	//archivo dns por default de la máquina
	listado de maquinas [ip nombre]
/etc/hostname 	//nombre del host que tenemos
/etc/resolv.conf 
	nameserver x.x.x.x
nslookup 	//buscar y o resolver dominios
nslookup google.com 	//ver el dominio de google (digase ip)

/etc/network/interfaces
	auto eth0
	iface eth0 inet dhcp

	auto eth0
	iface eth0 inet static
	address 192.168.3.90
	gateway 192.168.3.1
	netmask 255.255.255.0
	broadcast 192.168.3.255

/etc/init.d/networking restart

///////////////////////////////////

Inicio y parada del sistema

1. Bios
1.5 Firmware
2. Bootloader
3. Kernel
4. Init
5. Runlevels

/////////////////////////////////////
Runlevels
0 Apagado
1 Single user
2 Multiusuario
3 Servicios de red
4 No usado
5 Grafico
6 Reinicio

runlevel //ver el nuvel en que se corre
init 6 //reiniciar

/etc/init.d //donde vienen todos los scripts de inicio
/etc/rc$.d

/////////////////////////////////////
Runlevels (SysV)

/etc/init/servicios.conf
/etc/init.d/scripts
	funcion start
	funcion stop
initctl [start|stop|status] service
service SERVICIO start|stop|status
update-rc.d SERVICIO enable| [S|2|3|4|5]
init runlevel
sysv-rc-conf | chkconfig
	--list levels
	--level 35 ssh off
shutdown -rt

System-halt
init 0 //apagar tu compu

/////////////////////////////////////
Systemctl

Systemd utilities
	systemctl
	journalctl
	notify
	analyze
	cgls
	cgtop
	loginctl
	nspawn
Systemd daemons
	systemd
	journald
	networkd
	loginduser
	session
System Targets
	bootmode
	basic
	shutdown
	reboot
	multiuser
		dbus
		telephony
		dlog
		logind
	graphical
		user-session
	user-session
		display service
		tizen service
Systemd Core
	Manager
	systemd
	unit
		service
		timer
		mount
		target
		snapshot
		path
		socket
		swap
	login
		miltiseat
		session
		inhibit
		pam
	namespace
	log
	cgroup
	dbus
systemd Libraries
	dbus-1
	libpam
	libcap
	libcryptsetup
	tcpwrapper
	libaudit
	libnotify
Linux Kernel
	cgroups
	autofs
	kdus

//////////////////////
systemclt

/etc/systemd/system/
/lib/systemd/system/
Targets
	[Unit]
	Description=Mi script automatico
	After=network.target

	[service]
	ExecStart=/usr/local/bin/myscript.sh

	[install]
	WantedBy=default.target

fsck //checar los discos del dispositivo

///////////////////////
Respaldos Politica
tar -cf file.tar directorios 		//comprimir un directorio
tar -cvzf file.tar directorios 		//comprimir un directorio
tar -tf file.tar 					//mostrar los archivos comprimidos
tar -rf fie.tar archivo 			//mete otro archivo al tar
tar --delete -f file.tar archivo 	//elimina el archivo dentro de un tar
tar -u file.tar
tar -xvf archivo.tar
	-z
find . | cpio -ov > archivo.cpio 	//comprimir
cpio -idv < archivo.cpio 			//descomprimir
dd -if=archivo of =archivo
bzip2 archivo 						//comprimir
bunzip2 archivo.bz2 				//descomprimir

////////////////////////
Seguridad

Bitacoras
	Rsyslog
		/etc/rsyslog.d/50-default.conf
		Facilities (kernel,mail,lpr,daemon,auth)
		Levels(emerg,alert,err,warn,notice,info,debug)
	Iptables
		-L, -F
		Politica por default
			Iptables -P INPUT DROP
		IPtables -A INPUT

/etc/rsyslog.conf 	//configración del demonio que verifica todas las trazas del subsistema
/var/log/ 			//donde se guardan todos los logs en linux
dmesg 				//mensajes generados del sistema desde que arrancó
last 				//marca accesos de los usuarios

/////////////////////////
tcpdump -i eth0 -nvXv host IP -W name.pcap

/////////////////////////
Fases del pentesting

inteltechniques.com by michael bazzell facebooktools
whois			//paginas para ver quién es, desde su telefono hasta otrs cosas

Exploit: 		//código para explotar una vulnerabilidad especifica
Payload: 		//código ejecutado después de un exploit

cve and cpe		//páginas para encontrar vulnerabilidades

wayback machine 	//pagina para ver paginas anteriores de internet

msfconsole 			//herramient para explotación
use <<exploit_name>>

show options

set <<NAME>>  <<param>>

show payloads

set payload <<payloadName>>

show options

exploit



searchsploit 			//herramient para explotación

eth certification 		//buscar sobre ella

1. Reconocimiento: 
	pasivo
		a través de un tercero como usar facebook o cualquier cosa que no sea directamente de la empresa
	activo
		cuando ya estás interactuando con la empresa directamente
2. Analisis de vulnerabilidades
3. Explotación
4. Post-explotación
5. Reporte
6. Recuperación

///////////////////////

SQLinjection  //hacer una sentencia e SQL valida para hacer cosas usualmente entre '
c99.php //shell en php

///////////////////////
páginas pata CTFs

https://ctftime.org/
https://www.hackthebox.eu/

pagina con vulnerabilidades conocidas

http://cve.mitre.org/

pagina con otros juegos y retos

root.me.org

///////////////////////

sabuendo que tenemos un ejecutable  a.out podemos pasarlo a ensamblador con:

objdump -M -d a.out 	//leer el man para entenderlo

idapro 					//entender mejor código de ensamblador

////////////////////////
ensabloador

x86:

EAX 	//
EBX 	//
ECX 	//
EDX 	//

EBP 	//
ESP 	//

ESI 	//
EDI 	//

EIP		//apuntador a siguiente instruccion

lea 	//
and 	//
push 	//agrega algo a la pila
mov 	//mover lo de un registro a otro
call 	//
add 	//
nop 	//no operation
pop 	//saca algo de la pila
ret 	//regresa al lugar donde se ejecutó

//////////////////////////

1.- No hay respuesta con ping
2.- Hacer un nmap comun
3.- Hacer un nmap sin ping para detectar puertos //Pn
4.- Se encontró el puerto 666
4.- Expandir el rango de busqueda de puertos 	//-p 1-65535
5.- Se encontró el puerto 4545 					//fui el primero en encontrarlo
6.- Se probó en un navegador el nuevo puerto
7.- Se encontró un servidor web
8.- Se encontró código en binario que dice "anitalavalatina/"
9.- Se probó con esa extensión y se encontró un indice
10.- Se exploró en el html y decía FIND THE INDEX 
11.- En el index viene una cadena un tanto aleatoria
12.- en el no es tan fácil viene una cadena alfinal
13.- La mini cadena si se decifra en base 64 es "noEsTanFacil/"
14.- La cadena grande decifrada en base 64 sale un gato en ascii
15.- usando netcat en el puerto 666 y mandando el mensaje "muyFacil"
16.- La cadena es: csirt{laRespuestaEstaEnTuCorazon}
